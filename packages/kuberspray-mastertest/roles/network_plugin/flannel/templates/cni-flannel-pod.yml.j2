apiVersion: v1
kind: Pod
metadata:
  name: kube-flannel
  namespace: "kube-system"
  labels:
    tier: node
    k8s-app: flannel
spec:
{% if kube_version is version('v1.11.1', '>=') %}
  priorityClassName: system-node-critical
{% endif %}
  serviceAccountName: flannel
  nodeSelector:
    beta.kubernetes.io/os: linux
  containers:
  - name: kube-flannel
    image: {{ flannel_image_repo }}:{{ flannel_image_tag }}
    imagePullPolicy: {{ k8s_image_pull_policy }}
    resources:
      limits:
        cpu: {{ flannel_cpu_limit }}
        memory: {{ flannel_memory_limit }}
      requests:
        cpu: {{ flannel_cpu_requests }}
        memory: {{ flannel_memory_requests }}
    command:
    - "/opt/bin/flanneld"
    - "--ip-masq"
    - "--etcd-endpoints={{ etcd_access_addresses }}"
    - "--etcd-cafile={{ etcd_cert_dir }}/ca.pem"
    - "--etcd-certfile={{ etcd_cert_dir }}/node-{{ inventory_hostname }}.pem"
    - "--etcd-keyfile={{ etcd_cert_dir }}/node-{{ inventory_hostname }}-key.pem"
    securityContext:
      privileged: true
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    volumeMounts:
    - name: run
      mountPath: /run
    - name: cni
      mountPath: /etc/cni/net.d
    - name: flannel-cfg
      mountPath: /etc/kube-flannel/
    - name: host-nks-conf
      mountPath: {{ kube_config_dir }}
  - name: install-cni
    image: {{ flannel_cni_image_repo }}:{{ flannel_cni_image_tag }}
    command: ["/install-cni.sh"]
    env:
    # The CNI network config to install on each node.
    - name: CNI_NETWORK_CONFIG
      valueFrom:
        configMapKeyRef:
          name: kube-flannel-cfg
          key: cni-conf.json
    - name: CNI_CONF_NAME
      value: "10-flannel.conflist"
    volumeMounts:
    - name: cni
      mountPath: /host/etc/cni/net.d
    - name: host-cni-bin
      mountPath: /host/opt/cni/bin/
  hostNetwork: true
  tolerations:
    - operator: Exists
    # Mark pod as critical for rescheduling (Will have no effect starting with kubernetes 1.12)
    - key: CriticalAddonsOnly
      operator: "Exists"
  volumes:
    - name: run
      hostPath:
        path: /run
    - name: cni
      hostPath:
        path: /etc/cni/net.d
    - name: flannel-cfg
      configMap:
        name: kube-flannel-cfg
    - name: host-cni-bin
      hostPath:
        path: /opt/cni/bin
    - name: host-nks-conf
      hostPath:
        path: {{ kube_config_dir }}
  updateStrategy:
    rollingUpdate:
      maxUnavailable:  {{ serial | default('20%') }}
    type: RollingUpdate
